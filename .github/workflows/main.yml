# .github/workflows/main.yml

name: Django-app workflow

on:
  push:
    branches: [ master ]


jobs:
    # Запустить тестирование приложения
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt
    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8 

  # Собрать и отправить образ приложения на DockerHub
  build:
    runs-on: ubuntu-latest
    needs: tests # Не выполнять сразу, ждать, пока выполнится tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          file: ./backend/Dockerfile
          push: true
          tags: foreverfilthy/foodgram:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ./foodgram-project-react/infra
            sudo docker pull foreverfilthy/foodgram:latest
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose up -d --build

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!